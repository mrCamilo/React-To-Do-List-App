{"version":3,"sources":["components/ToDo.js","components/Header.js","toDoData.js","components/App.js","index.js"],"names":["ToDo","props","className","style","tasks","completed","textDecoration","name","priority","ETA","type","checked","onChange","handleChange","id","Header","Component","App","state","todos","toDoData","bind","this","setState","prevState","map","todo","console","log","toDoComponents","key","ReactDOM","render","document","getElementById"],"mappings":"8PAoBeA,MAjBf,SAAcC,GAKV,OAAQ,0BAAMC,UAAW,QACb,wBAAIC,MAAOF,EAAMG,MAAMC,UALd,CACjBC,eAAgB,gBAIyC,MAAOL,EAAMG,MAAMG,MACpE,yCAAeN,EAAMG,MAAMI,UAC3B,oCAAUP,EAAMG,MAAMK,KACtB,yBAAKP,UAAY,cAAjB,aAEA,2BAAOQ,KAAO,WAAWC,QAAUV,EAAMG,MAAMC,UAAWO,SAAU,kBAAMX,EAAMY,aAAaZ,EAAMG,MAAMU,QAEzG,+BCPDC,E,iLAJP,OAAO,wBAAIb,UAAU,UAAd,c,GAHMc,aCFN,G,MAAA,CACX,CACIF,GAAI,EACJP,KAAM,qBACNC,SAAU,MACVC,IAAK,YACLJ,WAAW,GAEf,CACIS,GAAI,EACJP,KAAM,kBACNC,SAAU,OACVC,IAAK,aACLJ,WAAW,GAEf,CACIS,GAAI,EACJP,KAAM,kBACNC,SAAU,OACVC,IAAK,SACLJ,WAAW,GAEf,CACIS,GAAI,EACJP,KAAM,eACNC,SAAU,OACVC,IAAK,aACLJ,WAAW,GAEf,CACIS,GAAI,EACJP,KAAM,mBACNC,SAAU,SACVC,IAAK,aACLJ,WAAW,KCWJY,E,YArCX,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,MAAOC,GAEX,EAAKP,aAAe,EAAKA,aAAaQ,KAAlB,gBALX,E,0EAQAP,GACTQ,KAAKC,UAAS,SAAAC,GAWV,MAAO,CAACL,MAVaK,EAAUL,MAAMM,KAAI,SAAAC,GACrC,OAAIA,EAAKZ,KAAOA,EAEL,eACAY,EADP,CAEIrB,WAAYqB,EAAKrB,YAGlBqB,SAIfC,QAAQC,IAAI,UAAWd,K,+BAGjB,IAAD,OACCe,EAAiBP,KAAKJ,MAAMC,MAAMM,KAAI,SAAArB,GAAK,OAC7C,kBAAC,EAAD,CAAM0B,IAAK1B,EAAMU,GAAIV,MAASA,EAAOS,aAAgB,EAAKA,kBAG9D,OAAO,yBAAKX,UAAU,YAClB,kBAAC,EAAD,MACC2B,O,GAjCKb,aCFlBe,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.cca587dc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction ToDo(props){\r\n    const crossOffTask = {\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    return  <form className =\"toDo\">\r\n                <h1 style={props.tasks.completed ? crossOffTask: null}>{props.tasks.name}</h1>\r\n                <h2>Priority: {props.tasks.priority}</h2>\r\n                <h3>ETA: {props.tasks.ETA}</h3>\r\n                <div className = \"taskIsDone\">\r\n                    Completed?\r\n                <input type = \"checkbox\" checked= {props.tasks.completed} onChange={() => props.handleChange(props.tasks.id)}/>\r\n                </div>\r\n                <hr></hr>\r\n             </form>\r\n}\r\n\r\nexport default ToDo","import React, {Component} from 'react'\r\n\r\nclass Header extends Component\r\n{ \r\n    render(){\r\n        return <h1 className=\"header\">To Do!</h1>\r\n    }\r\n}\r\n\r\nexport default Header","export default [\r\n    {\r\n        id: 1,\r\n        name: 'Take out the trash',\r\n        priority: 'low',\r\n        ETA: '5 minutes',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Wash the dishes',\r\n        priority: 'high',\r\n        ETA: '10 minutes',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Finish homework',\r\n        priority: 'high',\r\n        ETA: '1 hour',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Walk the dog\",\r\n        priority: 'high',\r\n        ETA: '15 minutes',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Grocery shopping\",\r\n        priority: 'medium',\r\n        ETA: '35 minutes',\r\n        completed: false\r\n    }\r\n]","import React, {Component} from 'react'\r\n\r\nimport ToDo from './ToDo'\r\nimport Header from './Header'\r\nimport '../style.css'\r\nimport toDoData from '../toDoData'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            todos: toDoData\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(id){\r\n        this.setState(prevState=>{\r\n            const updatedToDos = prevState.todos.map(todo=>{\r\n                if (todo.id === id)\r\n                {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n            return {todos: updatedToDos}\r\n        })\r\n        console.log('changed', id)\r\n    }\r\n\r\n    render() {\r\n        const toDoComponents = this.state.todos.map(tasks=> \r\n            <ToDo key={tasks.id} tasks = {tasks} handleChange = {this.handleChange}/>\r\n        )\r\n\r\n        return <div className=\"toDoList\">\r\n            <Header />\r\n            {toDoComponents}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}